@import url("Layout.css");
@import url("styling.css");

/* New tailwind-based css imports */
@import "tailwindcss";
@import "./table.css";

@theme {
	--color-customblue: hsla(197, 68%, 37%, 10);
}


.horizontal-line {
	height: 0;
	border-bottom: thin solid hsl(0deg, 0%, 80%);
}


.jumbotron {
	@apply bg-gray-100 max-w-md mt-6 mx-auto rounded-xl px-4 py-2;
}

.heading-1 {
	@apply text-3xl font-bold;
}

.heading-2 {
	@apply text-2xl font-bold mb-3;
}

.link {
	@apply text-blue-600 hover:underline cursor-pointer;
}

.align-with-btn {
	@apply py-1;
}

.btn {
	@apply bg-gray-200 text-gray-800 font-semibold px-4 py-1 rounded hover:bg-gray-300 transition;

	&.btn-primary {
		@apply bg-blue-600 text-white hover:bg-blue-700;
	}

	&.btn-danger {
		@apply bg-red-600 text-white hover:bg-red-700;
	}

	&.selected {
		@apply bg-gray-300;
	}

	&:disabled {
		@apply bg-gray-100 text-gray-400 cursor-not-allowed hover:bg-gray-100;
	}
}


.group {

	&>.input,
	&>.btn {
		@apply rounded-none;
	}

	&>.input:first-child,
	&>.btn:first-child {
		@apply rounded-l;
	}

	&>.input:last-child,
	&>.btn:last-child {
		@apply rounded-r;
	}
}

div.input {
	@apply py-4;
}

.input {
	@apply inline-block px-3 py-1 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200;

	/* 'is-wrapper' is used when this element is a complex wrapper for other input elements*/
	&.is-wrapper {
		@apply has-focus-within:outline-none has-focus-within:ring has-focus-within:ring-blue-200;
	}

	/* 'stripped' is used for inner input elements inside a complex wrapper with 'is-wrapper' */
	&>input.stripped {
		@apply p-0 m-0 my-0 focus:outline-none;
	}
}


input[type="checkbox"]+label,
label>input[type="checkbox"] {
	@apply mr-1;
}


.aligned-labels-and-inputs {
	@apply flex flex-row my-4;

	&>:first-child {
		@apply w-[5em];
	}
}

.push-left {
	@apply flex flex-row justify-start my-4 gap-2 items-baseline;
}

.push-right {
	@apply flex flex-row justify-end my-4 gap-2 items-baseline;
}

.stack-horizontal {
	@apply flex flex-row gap-2 items-baseline;

	&.to-the-left {
		@apply justify-start;
	}

	&.to-the-right {
		@apply justify-end;
	}
}

.stack-vertical {
	@apply flex flex-col gap-2;
}

span.tag {
	@apply bg-gray-200 rounded-xl px-2 py-0.5 mr-1;

	&>span {
		@apply pl-1 text-gray-400 border-l border-current cursor-pointer;
	}
}

.card {
	@apply border border-gray-300 bg-white my-3 rounded-lg overflow-hidden shadow-lg shadow-gray-200;
	transition: transform 0.2s ease;

	&:hover {
		transform: scale(1.01);
	}
}


.overlay-backdrop {
	@apply fixed top-0 left-0 w-full h-full;
	background: rgb(from black r g b / .25);
	display: flex;
	justify-content: center;
	align-items: center;

	&>.overlay {
		background-color: white;
		/* border-radius: 8px; */
		box-shadow: 0 0 3em rgb(from black r g b / .5);
		padding: 0;
		max-width: 90%;
		max-height: 90%;
		overflow: auto;
	}
}

body:has(.overlay) {
	overflow: hidden;
}